Okay, I see the issue. The query "How do I know when a deal was closed?" correctly infers "deal" -> Opportunity and "when" -> Date/DateTime type. However, the crucial keyword "closed" might not be effectively translated into a search condition that strongly points to the "Close Date" field, or other relevant fields are out-competing it.

The `generateSearchPlan` function and its LLM prompt are the primary places to address this. We need to ensure the LLM:
1.  Recognizes "closed" (and synonyms like "won", "completed" in the context of a deal) as a key term.
2.  Generates `filterGroups` that search for these terms in `fieldLabel` and `description`.
3.  Perhaps even gives a slight implicit boost or ensures these specific keywords are included when the context is "deal" + "when".

Here's a prompt to refine the LLM's behavior in `server/nlq.ts`:

---

**Prompt for Replit:**

"The NLQ system is not returning the expected 'Close Date' field for the query: 'How do I know when a deal was closed?'. While object ('Opportunity') and data type ('Date') inference seem to be working, the keyword 'closed' isn't leading to the 'Close Date' field effectively.

We need to refine the LLM prompt within the `generateSearchPlan` function in `server/nlq.ts` to better handle this and similar scenarios.

**1. Modify `server/nlq.ts` - Update LLM Prompt in `generateSearchPlan`:**

*   **Task:** Add a new, specific example to the LLM prompt that directly addresses the problematic query. This example should guide the LLM to create more precise `filterGroups` for terms like "closed" in the context of a "deal".
*   **Guidelines for the New Example:**
    *   Insert the following JSON example into the list of examples provided to the LLM in the `generateSearchPlan` prompt. Place it after other Opportunity-related examples if possible, or with other temporal query examples.
    *   **Crucially, ensure the `filterGroups` include conditions that specifically search for variations of "close" or "closed" in relevant field attributes.**

    ```json
    Query: "How do I know when a deal was closed?"
    {
      "intent": "find_fields",
      "targetObject": "Opportunity",
      "filterGroups": [
        {
          "logicalOperator": "OR", 
          "conditions": [
            { "field": "fieldLabel", "operator": "ilike", "value": "%close%" },
            { "field": "fieldLabel", "operator": "ilike", "value": "%closed%" },
            { "field": "fieldLabel", "operator": "ilike", "value": "%won date%" }, // Common alternative
            { "field": "description", "operator": "ilike", "value": "%close date%" },
            { "field": "description", "operator": "ilike", "value": "%when the deal closed%" }
          ]
        }
      ],
      "dataTypeFilter": { "field": "dataType", "operator": "ilike", "value": "%Date%" }, // "when" implies Date or Date/Time
      "rawKeywords": ["when", "deal", "closed", "close", "won"]
    }
    ```

*   **Additional (Optional) Rule Refinement (Consider if the example alone is not enough):**
    You could add a sub-point to the "CRITICAL: Object Inference Rules for targetObject" or create a new small rule section:
    ```
    CRITICAL: Contextual Keyword Prioritization:
    1. When a query combines a common business object (like "deal" for Opportunity) with action/status keywords (like "closed", "won", "lost", "created", "modified"), ensure these action/status keywords are strongly represented in the 'filterGroups' targeting 'fieldLabel' and 'description'.
    ```
    *However, a well-crafted example like the one above is often more effective for LLMs than abstract rules.*

*   **Review `rawKeywords`:** Ensure the `rawKeywords` in the example include "close" and "closed" to reinforce their importance to the LLM.

**2. Verify `server/database-search.ts` - `searchSalesforceFieldsInDB` Function:**

*   **Task:** No changes are expected here for this specific fix. The existing `processSearchCondition` and `filterGroups` logic should correctly handle the `NLQSearchPlan` generated by the improved LLM prompt.
*   **Self-Correction/Check:** The database query will perform `ILIKE '%close%'` or `ILIKE '%closed%'` on `fieldLabel` and `description`. This should match "Close Date" if it's in the `fieldLabel`.

**3. No Changes Expected For:**
    *   `shared/schema.ts` (unless `matchConfidence` related fields were missed, but this problem is about initial retrieval)
    *   Frontend components (`client/src/components/*`)

**Key for Success:**

*   The new example provided to the LLM in `generateSearchPlan` is the most critical part. It explicitly shows the LLM how to translate "when a deal was closed" into a plan that targets "Opportunity", "Date" type fields, AND includes search terms like "close" or "closed" for `fieldLabel` and `description`.
*   Ensure that the `test-upload.csv` or your actual Salesforce data actually contains an "Opportunity" field with a label like "Close Date" and type "Date" or "Date/Time" so the query *can* find it.

After applying this, test the query "How do I know when a deal was closed?" again. You should now see "Close Date" (or similarly named fields) appearing in the results, hopefully with a "High" match confidence due to the combination of object, data type, and keyword match.
"

